<?php
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

 if(! class_exists('AutoReplaceBrokenLinksForYoutube')){
	class AutoReplaceBrokenLinksForYoutube {
		private $auto_replace_broken_links_for_youtube_options;
		private $addDefaultValues;

		public function __construct() {
			global $wpdb;
			$this->$addDefaultValues=0;
			$total_rows = $wpdb->get_var("select count(option_value) from wp_options where option_name  = 'auto_replace_broken_links_for_youtube_option_name'");
			if ($total_rows <= 0) {
				$this->$addDefaultValues=1;
			}
			add_action( 'admin_menu', array( $this, 'auto_replace_broken_links_for_youtube_add_plugin_page' ) );
			add_action( 'admin_init', array( $this, 'auto_replace_broken_links_for_youtube_page_init' ) );
		}

		public function auto_replace_broken_links_for_youtube_add_plugin_page() {
			add_options_page(
				'Auto Replace Broken Links For Youtube', // page_title
				'Auto Replace Broken Links For Youtube', // menu_title
				'manage_options', // capability
				'auto-replace-broken-links-for-youtube', // menu_slug
				array( $this, 'auto_replace_broken_links_for_youtube_create_admin_page' ) // function
			);
		}

		public function auto_replace_broken_links_for_youtube_create_admin_page() {
			$this->auto_replace_broken_links_for_youtube_options = get_option( 'auto_replace_broken_links_for_youtube_option_name' ); ?>

			<div class="wrap">
				<h2>Auto Replace Broken Links For youtube_api_key_0</h2>
				<p><?php _e('Thanks to the action performed by the plugin on your content, you will be able to improve SEO and user experience by checking all the broken Youtube links on your website','auto-replace-broken-links-for-youtube'); ?>.</p>
				<?php settings_errors(); ?>
				<form method="post" action="options.php">
					<?php
					settings_fields( 'auto_replace_broken_links_for_youtube_option_group' );
					do_settings_sections( 'auto-replace-broken-links-for-youtube-admin' );
					?>
					<table>
						<tr>
							<td>
								<?php submit_button(); ?>
							</td>	
							<td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;
								<?php if(!wp_is_mobile()) { ?>
									<img style="width:80%; height:auto;" src="<?php echo esc_url(plugin_dir_url( __FILE__ ) . 'assets/screenshot-1-desktop-device.png'); ?>" alt="screenshot desktop and mobile device" />
								<?php } else { ?>
									<img src="<?php echo esc_url(plugin_dir_url( __FILE__ ) . 'assets/screenshot-1-mobile-device.png'); ?>" alt="screenshot only mobile device" />
								<?php } ?>
							</td>
						</tr>
					</table>	
				</form>
				<?php $this->List_Youtube_Broken_Links(); ?>
			</div>
		<?php }

		public function auto_replace_broken_links_for_youtube_page_init() {
			register_setting(
				'auto_replace_broken_links_for_youtube_option_group', // option_group
				'auto_replace_broken_links_for_youtube_option_name', // option_name
				array( $this, 'auto_replace_broken_links_for_youtube_sanitize' ) // sanitize_callback
			);

			add_settings_section(
				'auto_replace_broken_links_for_youtube_setting_section', // id
				esc_html__('Settings','auto-replace-broken-links-for-youtube'), // title
				array( $this, 'auto_replace_broken_links_for_youtube_section_info' ), // callback
				'auto-replace-broken-links-for-youtube-admin' // page
			);

			add_settings_field(
				'youtube_api_key_0', // id
				'Youtube API Key', // title
				array( $this, 'youtube_api_key_0_callback' ), // callback
				'auto-replace-broken-links-for-youtube-admin', // page
				'auto_replace_broken_links_for_youtube_setting_section' // section
			);

			add_settings_field(
				'action_2', // id
				esc_html__('Action', 'auto-replace-broken-links-for-youtube').':', // title
				array( $this, 'action_2_callback' ), // callback
				'auto-replace-broken-links-for-youtube-admin', // page
				'auto_replace_broken_links_for_youtube_setting_section' // section
			);

			add_settings_field(
				'enable_email_notifications_1', // id
				esc_html__('Enable email notifications','auto-replace-broken-links-for-youtube'), // title
				array( $this, 'enable_email_notifications_1_callback' ), // callback
				'auto-replace-broken-links-for-youtube-admin', // page
				'auto_replace_broken_links_for_youtube_setting_section' // section
			);

			add_settings_field(
				'sent_email_every_3', // id
				esc_html__('Sent email every', 'auto-replace-broken-links-for-youtube') . ' ... Links', // title
				array( $this, 'sent_email_every_3_callback' ), // callback
				'auto-replace-broken-links-for-youtube-admin', // page
				'auto_replace_broken_links_for_youtube_setting_section' // section
			);

		}

		public function auto_replace_broken_links_for_youtube_sanitize($input) {
			$sanitary_values = array();
			if ( isset( $input['youtube_api_key_0'] ) ) {
				$sanitary_values['youtube_api_key_0'] = sanitize_text_field( $input['youtube_api_key_0'] );
			}

			if ( isset( $input['action_2'] ) ) {
				$sanitary_values['action_2'] = $input['action_2'];
			}

			if ( isset( $input['enable_email_notifications_1'] ) ) {
				$sanitary_values['enable_email_notifications_1'] = $input['enable_email_notifications_1'];
			}

			if ( isset( $input['sent_email_every_3'] ) ) {
				$sanitary_values['sent_email_every_3'] = $input['sent_email_every_3'];
			}

			return $sanitary_values;
		}

		public function auto_replace_broken_links_for_youtube_section_info() {
			
		}

		public function youtube_api_key_0_callback() {
			printf(
				'<input class="regular-text" type="text" name="auto_replace_broken_links_for_youtube_option_name[youtube_api_key_0]" id="youtube_api_key_0" value="%s">',
				isset( $this->auto_replace_broken_links_for_youtube_options['youtube_api_key_0'] ) ? esc_attr( $this->auto_replace_broken_links_for_youtube_options['youtube_api_key_0']) : ''
			);
			?><br><a target="_blank" href="https://www.youtube.com/watch?v=44OBOSBd73M"><?php _e('How to Get YouTube Data API Key','auto-replace-broken-links-for-youtube'); ?></a><?php
		}

		public function action_2_callback() {
			?> <select name="auto_replace_broken_links_for_youtube_option_name[action_2]" id="action_2">
				<?php $selected = (isset( $this->auto_replace_broken_links_for_youtube_options['action_2'] ) && $this->auto_replace_broken_links_for_youtube_options['action_2'] === 'Replace Video') ? 'selected' : '' ; ?>
				<option value="Replace Video" <?php echo $selected; ?>>Replace Video</option>
				<?php $selected = (isset( $this->auto_replace_broken_links_for_youtube_options['action_2'] ) && $this->auto_replace_broken_links_for_youtube_options['action_2'] === 'Hide Video') ? 'selected' : '' ; ?>
				<option value="Hide Video" <?php echo $selected; ?>>Hide Video</option>
			</select> <?php
		}

		public function enable_email_notifications_1_callback() {
			printf(
				'<input type="checkbox" name="auto_replace_broken_links_for_youtube_option_name[enable_email_notifications_1]" id="enable_email_notifications_1" value="enable_email_notifications_1" %s> <label for="enable_email_notifications_1">'.esc_html__('The plugin will send an email to the administrator to notify the operation','auto-replace-broken-links-for-youtube').'.</label>',
				(($this->$addDefaultValues==1) || (isset( $this->auto_replace_broken_links_for_youtube_options['enable_email_notifications_1'] ) && $this->auto_replace_broken_links_for_youtube_options['enable_email_notifications_1'] === 'enable_email_notifications_1' )) ? 'checked' : ''
			);
		}

		public function sent_email_every_3_callback() {
			printf(
				'<input min="1" max="10" size="2" class="regular-text" type="text" name="auto_replace_broken_links_for_youtube_option_name[sent_email_every_3]" id="sent_email_every_3" value="%s">',
				isset( $this->auto_replace_broken_links_for_youtube_options['sent_email_every_3'] ) ? esc_attr( $this->auto_replace_broken_links_for_youtube_options['sent_email_every_3']) : '5'
			);
		}

		public function List_Youtube_Broken_Links() {
			global $wpdb;

			$table_name = $wpdb->prefix . "auto_replace_broken_links_for_youtube";

			// Records for page
			$results_per_page = 10;

			// Get total records
			$sql = "SELECT COUNT(*) AS total FROM " . $table_name . " WHERE (YEAR(DateOperation)=YEAR(CURDATE()))";
			$result = $conn->query($sql);
			$row = $result->fetch_assoc();
			$total_results = $row['total'];

			// Total pages
			$total_pages = ceil($total_results / $results_per_page);

			// current page
			if (!isset($_GET['pagination'])) {
				$current_page = 1;
			} else {
				$current_page = $_GET['pagination'];
			}

			// offset
			$offset = ($current_page - 1) * $results_per_page;

			$query = "SELECT IdPost, DateOperation, TitlePost, UrlPermalinkPost, WasSent, Action FROM $table_name WHERE (YEAR(DateOperation)=YEAR(CURDATE())) ORDER BY DateOperation DESC LIMIT $offset, $results_per_page";			
			$results = $wpdb->get_results($query);

			if(!empty($results)) {
				$title_table  = '<hr><h3 style="color:black;">'.__('Auto Replace Broken Links For Youtube','auto-replace-broken-links-for-youtube').'...</h3><br>';
				$title_table .= '<hr style="color:blue;"><br>';
				$table  = '<table style="border: 1px solid black; border-collapse: collapse;">';
				$table .= '<thead style="border: 1px solid black; border-collapse: collapse;">';
				$table .= '<tr style="height:40px; background-color:lightgray; border: 1px solid black; border-collapse: collapse;">';
				$table .= '<th align="center"><b style="color:black; border: 1px solid black; border-collapse: collapse;">'.__('Detected', 'auto-replace-broken-links-for-youtube').'</b></th>';
				$table .= '<th align="center"><b style="width: 30%; color:black;border: 1px solid black; border-collapse: collapse;"'.__('>Post', 'auto-replace-broken-links-for-youtube').'</b></th>';
				$table .= '<th align="center"><b style="width: 30%; color:black;border: 1px solid black; border-collapse: collapse;">'.__('URL Post', 'auto-replace-broken-links-for-youtube').'</b></th>';
				$table .= '<th align="center"><b style="color:black; border: 1px solid black; border-collapse: collapse;">'.__('Sent', 'auto-replace-broken-links-for-youtube').'</b></th>';
				$table .= '<th align="center"><b style="color:black; border: 1px solid black; border-collapse: collapse;">'.__('Method', 'auto-replace-broken-links-for-youtube').'</b></th>';
				$table .= '</tr>';
				$table .= '</thead>';
				$table .= '<tbody>';

				foreach ($results as $row) {
					$table .= '<tr>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . date("Y-m-d",strtotime($row->DateOperation)) . '</td>';
					$table .= '<td style="width: 30%; border: 1px solid black; border-collapse: collapse;">' . $row->TitlePost . '</td>';
					$table .= '<td style="width: 30%; border: 1px solid black; border-collapse: collapse;"><a target="_blank" href="' . get_site_url() . '/wp-admin/post.php?post='.$row->IdPost.'&action=edit">'.$row->UrlPermalinkPost.'</a></td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . (($row->WasSent == 1) ? 'email' : __('in progress','auto-replace-broken-links-for-youtube')) . '</td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . $row->Action . '</td>';
					$table .= '</tr>';
				}

				$table .= '</tbody></table>';

				echo $title_table.$table;
				
				// Paginate Link for data navigation
				if($total_pages > 1){
					echo "<br>";
					echo "<center>";
					$url = admin_url('options-general.php?page=auto-replace-broken-links-for-youtube');
					for ($i = 1; $i <= $total_pages; $i++) {
						echo "<a href='".$url."'&pagination=" . $i . "'>" . $i . "</a> ";
					}
					echo "</center>";
				}

			}	
		
		}

	}
}

if ( is_admin() ) {
	if(class_exists('AutoReplaceBrokenLinksForYoutube')){
		$auto_replace_broken_links_for_youtube = new AutoReplaceBrokenLinksForYoutube();
	}
}

/* 
 * Retrieve this value with:
 * $auto_replace_broken_links_for_youtube_options = get_option( 'auto_replace_broken_links_for_youtube_option_name' ); // Array of All Options
 * $youtube_api_key_0 = $auto_replace_broken_links_for_youtube_options['youtube_api_key_0']; // Youtube API Key
 * $enable_email_notifications_1 = $auto_replace_broken_links_for_youtube_options['enable_email_notifications_1']; // Enable email notifications
 * $sent_email_every_3 = $auto_replace_broken_links_for_youtube_options['sent_email_every_3']; // Sent email every ... broken links
 * $action_2 = $auto_replace_broken_links_for_youtube_options['action_2']; // Action
 */
