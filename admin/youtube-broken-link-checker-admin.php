<?php
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

 if(! class_exists('YoutubeBrokenLinkChecker')){
	class YoutubeBrokenLinkChecker {
		private $youtube_broken_link_checker_options;

		public function __construct() {
			add_action( 'admin_menu', array( $this, 'youtube_broken_link_checker_add_plugin_page' ) );
			add_action( 'admin_init', array( $this, 'youtube_broken_link_checker_page_init' ) );
		}

		public function youtube_broken_link_checker_add_plugin_page() {
			add_options_page(
				'Youtube Broken Link Checker', // page_title
				'Youtube Broken Link Checker', // menu_title
				'manage_options', // capability
				'youtube-broken-link-checker', // menu_slug
				array( $this, 'youtube_broken_link_checker_create_admin_page' ) // function
			);
		}

		public function youtube_broken_link_checker_create_admin_page() {
			$this->youtube_broken_link_checker_options = get_option( 'youtube_broken_link_checker_option_name' ); ?>

			<div class="wrap">
				<h2>Youtube Broken Link Checker</h2>
				<p><?php _e('Youtube Broken Link Checker hide all broken links youtube videos to improve SEO','youtube-broken-link-checker'); ?>.</p>
				<?php settings_errors(); ?>
				<form method="post" action="options.php">
					<?php
					settings_fields( 'youtube_broken_link_checker_option_group' );
					do_settings_sections( 'youtube-broken-link-checker-admin' );
					?>
					<table>
						<tr>
							<td>
								<?php submit_button(); ?>
							</td>	
							<td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;
								<?php if(!wp_is_mobile()) { ?>
									<img style="width:80%; height:auto;" src="<?php echo esc_url(plugin_dir_url( __FILE__ ) . 'assets/screenshot-1-desktop-device.png'); ?>" alt="screenshot desktop and mobile device" />
								<?php } else { ?>
									<img src="<?php echo esc_url(plugin_dir_url( __FILE__ ) . 'assets/screenshot-1-mobile-device.png'); ?>" alt="screenshot only mobile device" />
								<?php } ?>
							</td>
						</tr>
					</table>	
				</form>
				<?php $this->List_Youtube_Broken_Links(); ?>
			</div>
		<?php }

		public function youtube_broken_link_checker_page_init() {
			register_setting(
				'youtube_broken_link_checker_option_group', // option_group
				'youtube_broken_link_checker_option_name', // option_name
				array( $this, 'youtube_broken_link_checker_sanitize' ) // sanitize_callback
			);

			add_settings_section(
				'youtube_broken_link_checker_setting_section', // id
				esc_html__('Settings','youtube-broken-link-checker'), // title
				array( $this, 'youtube_broken_link_checker_section_info' ), // callback
				'youtube-broken-link-checker-admin' // page
			);

			add_settings_field(
				'youtube_api_key_0', // id
				'Youtube API Key', // title
				array( $this, 'youtube_api_key_0_callback' ), // callback
				'youtube-broken-link-checker-admin', // page
				'youtube_broken_link_checker_setting_section' // section
			);

			add_settings_field(
				'action_2', // id
				esc_html__('Action', 'youtube-broken-link-checker').':', // title
				array( $this, 'action_2_callback' ), // callback
				'youtube-broken-link-checker-admin', // page
				'youtube_broken_link_checker_setting_section' // section
			);

			add_settings_field(
				'enable_email_notifications_1', // id
				esc_html__('Enable email notifications','youtube-broken-link-checker'), // title
				array( $this, 'enable_email_notifications_1_callback' ), // callback
				'youtube-broken-link-checker-admin', // page
				'youtube_broken_link_checker_setting_section' // section
			);

			add_settings_field(
				'sent_email_every_3', // id
				esc_html__('Sent email every:', 'youtube-broken-link-checker'), // title
				array( $this, 'sent_email_every_3_callback' ), // callback
				'youtube-broken-link-checker-admin', // page
				'youtube_broken_link_checker_setting_section' // section
			);

		}

		public function youtube_broken_link_checker_sanitize($input) {
			$sanitary_values = array();
			if ( isset( $input['youtube_api_key_0'] ) ) {
				$sanitary_values['youtube_api_key_0'] = sanitize_text_field( $input['youtube_api_key_0'] );
			}

			if ( isset( $input['action_2'] ) ) {
				$sanitary_values['action_2'] = $input['action_2'];
			}

			if ( isset( $input['enable_email_notifications_1'] ) ) {
				$sanitary_values['enable_email_notifications_1'] = $input['enable_email_notifications_1'];
			}

			if ( isset( $input['sent_email_every_3'] ) ) {
				$sanitary_values['sent_email_every_3'] = $input['sent_email_every_3'];
			}

			return $sanitary_values;
		}

		public function youtube_broken_link_checker_section_info() {
			
		}

		public function youtube_api_key_0_callback() {
			printf(
				'<input class="regular-text" type="text" name="youtube_broken_link_checker_option_name[youtube_api_key_0]" id="youtube_api_key_0" value="%s">',
				isset( $this->youtube_broken_link_checker_options['youtube_api_key_0'] ) ? esc_attr( $this->youtube_broken_link_checker_options['youtube_api_key_0']) : ''
			);
		}

		public function action_2_callback() {
			?> <select name="youtube_broken_link_checker_option_name[action_2]" id="action_2">
				<?php $selected = (isset( $this->youtube_broken_link_checker_options['action_2'] ) && $this->youtube_broken_link_checker_options['action_2'] === 'Hide Video') ? 'selected' : '' ; ?>
				<option value="Hide Video" <?php echo $selected; ?>>Hide Video</option>
				<?php $selected = (isset( $this->youtube_broken_link_checker_options['action_2'] ) && $this->youtube_broken_link_checker_options['action_2'] === 'Replace Video') ? 'selected' : '' ; ?>
				<option value="Replace Video" <?php echo $selected; ?>>Replace Video</option>
			</select> <?php
		}

		public function enable_email_notifications_1_callback() {
			printf(
				'<input type="checkbox" name="youtube_broken_link_checker_option_name[enable_email_notifications_1]" id="enable_email_notifications_1" value="enable_email_notifications_1" %s> <label for="enable_email_notifications_1">'.esc_html__('The plugin will send an email to the administrator to notify the operation','youtube-broken-link-checker').'.</label>',
				( isset( $this->youtube_broken_link_checker_options['enable_email_notifications_1'] ) && $this->youtube_broken_link_checker_options['enable_email_notifications_1'] === 'enable_email_notifications_1' ) ? 'checked' : ''
			);
		}

		public function sent_email_every_3_callback() {
			printf(
				'<input min="1" max="10" size="2" class="regular-text" type="text" name="youtube_broken_link_checker_option_name[sent_email_every_3]" id="sent_email_every_3" value="%s">',
				isset( $this->youtube_broken_link_checker_options['sent_email_every_3'] ) ? esc_attr( $this->youtube_broken_link_checker_options['sent_email_every_3']) : '5'
			);
		}

		public function List_Youtube_Broken_Links() {
			global $wpdb;
			$query = "SELECT IdPost, DateOperation, TitlePost, UrlPermalinkPost, WasSent, Action FROM " . $wpdb->prefix . "youtube_broken_link_checker WHERE (YEAR(DateOperation)=YEAR(CURDATE())) ORDER BY DateOperation DESC LIMIT 50";			
			$results = $wpdb->get_results($query);

			if(!empty($results)) {
				$title_table  = '<hr><h3 style="color:black;">'.__('Youtube Broken Links','youtube-broken-link-checker').'...</h3><br>';
				$title_table .= '<hr style="color:blue;"><br>';
				$table  = '<table style="border: 1px solid black; border-collapse: collapse;">';
				$table .= '<thead style="border: 1px solid black; border-collapse: collapse;">';
				$table .= '<tr style="border: 1px solid black; border-collapse: collapse;">';
				$table .= '<th align="center"><b style="color:blue;border: 1px solid black; border-collapse: collapse;">'.__('ID Post', 'youtube-broken-link-checker').'</b></th>';
				$table .= '<th align="center"><b style="color:blue;border: 1px solid black; border-collapse: collapse;">'.__('Detected', 'youtube-broken-link-checker').'</b></th>';
				$table .= '<th align="center"><b style="color:blue;border: 1px solid black; border-collapse: collapse;"'.__('>Post', 'youtube-broken-link-checker').'</b></th>';
				$table .= '<th align="center"><b style="color:blue;border: 1px solid black; border-collapse: collapse;">'.__('URL Post', 'youtube-broken-link-checker').'</b></th>';
				$table .= '<th align="center"><b style="color:blue;border: 1px solid black; border-collapse: collapse;">'.__('Sent', 'youtube-broken-link-checker').'</b></th>';
				$table .= '<th align="center"><b style="color:blue;border: 1px solid black; border-collapse: collapse;">'.__('Method', 'youtube-broken-link-checker').'</b></th>';
				$table .= '</tr>';
				$table .= '</thead>';
				$table .= '<tbody>';

				foreach ($results as $row) {
					$table .= '<tr>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . $row->IdPost . '</td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . date("Y-m-d",strtotime($row->DateOperation)) . '</td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;">' . $row->TitlePost . '</td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;">' . $row->UrlPermalinkPost . '</td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . (($row->WasSent == 1) ? 'email' : __('in progress','youtube-broken-link-checker')) . '</td>';
					$table .= '<td style="border: 1px solid black; border-collapse: collapse;" align="center">' . $row->Action . '</td>';
					$table .= '</tr>';
				}

				$table .= '</tbody></table>';

				echo $title_table.$table;
			}	
			
		}

	}
}

if ( is_admin() ) {
	if(class_exists('YoutubeBrokenLinkChecker')){
		$youtube_broken_link_checker = new YoutubeBrokenLinkChecker();
	}
}

/* 
 * Retrieve this value with:
 * $youtube_broken_link_checker_options = get_option( 'youtube_broken_link_checker_option_name' ); // Array of All Options
 * $youtube_api_key_0 = $youtube_broken_link_checker_options['youtube_api_key_0']; // Youtube API Key
 * $enable_email_notifications_1 = $youtube_broken_link_checker_options['enable_email_notifications_1']; // Enable email notifications
 * $sent_email_every_3 = $youtube_broken_link_checker_options['sent_email_every_3']; // Sent email every ... broken links
 * $action_2 = $youtube_broken_link_checker_options['action_2']; // Action
 */
